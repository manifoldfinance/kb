"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[4562],{3905:function(e,s,t){t.d(s,{Zo:function(){return u},kt:function(){return f}});var o=t(7294);function n(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function l(e,s){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);s&&(o=o.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{};s%2?l(Object(t),!0).forEach((function(s){n(e,s,t[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}))}return e}function r(e,s){if(null==e)return{};var t,o,n=function(e,s){if(null==e)return{};var t,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],s.indexOf(t)>=0||(n[t]=e[t]);return n}(e,s);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],s.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=o.createContext({}),p=function(e){var s=o.useContext(i),t=s;return e&&(t="function"==typeof e?e(s):a(a({},s),e)),t},u=function(e){var s=p(e.components);return o.createElement(i.Provider,{value:s},e.children)},d={inlineCode:"code",wrapper:function(e){var s=e.children;return o.createElement(o.Fragment,{},s)}},c=o.forwardRef((function(e,s){var t=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=p(t),f=n,y=c["".concat(i,".").concat(f)]||c[f]||d[f]||l;return t?o.createElement(y,a(a({ref:s},u),{},{components:t})):o.createElement(y,a({ref:s},u))}));function f(e,s){var t=arguments,n=s&&s.mdxType;if("string"==typeof e||n){var l=t.length,a=new Array(l);a[0]=c;var r={};for(var i in s)hasOwnProperty.call(s,i)&&(r[i]=s[i]);r.originalType=e,r.mdxType="string"==typeof e?e:n,a[1]=r;for(var p=2;p<l;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9652:function(e,s,t){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.ProtoMessage=s.ProtoService=s.ProtoServiceMethod=s.ProtoEnum=void 0;var n=o(t(7294)),l=o(t(9960)),a={textAlign:"left"};s.ProtoEnum=function(e){var s=e.enumb;return n.default.createElement(n.default.Fragment,null,n.default.createElement("p",{style:{whiteSpace:"pre-wrap"}},s.description),n.default.createElement("table",null,n.default.createElement((function(){return n.default.createElement("thead",null,n.default.createElement("tr",null,n.default.createElement("th",null,"Name"),n.default.createElement("th",null,"Number"),n.default.createElement("th",null,"Description")))}),null),n.default.createElement((function(){return n.default.createElement("tbody",null,s.values.map((function(e){return n.default.createElement("tr",{key:e.name},n.default.createElement("td",null,n.default.createElement("code",null,e.name)),n.default.createElement("td",null,n.default.createElement("code",null,e.number)),n.default.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description))})))}),null)))};s.ProtoServiceMethod=function(e){var s=e.method;return n.default.createElement("table",null,n.default.createElement("tbody",null,n.default.createElement("tr",null,n.default.createElement("th",{style:a},"Method"),n.default.createElement("td",null,n.default.createElement("code",null,s.name))),n.default.createElement("tr",null,n.default.createElement("th",{style:a},"Request"),n.default.createElement("td",null,n.default.createElement(l.default,{to:s.requestTypeLink},n.default.createElement("code",null,s.requestType)),!0===s.requestStreaming?" stream":"")),n.default.createElement("tr",null,n.default.createElement("th",{style:a},"Response"),n.default.createElement("td",null,n.default.createElement(l.default,{to:s.responseTypeLink},n.default.createElement("code",null,s.responseType)),!0===s.responseStreaming?" stream":"")),n.default.createElement("tr",null,n.default.createElement("th",{style:a},"Description"),n.default.createElement("td",null,s.description))))};var r=function(e){var t=e.methods;return n.default.createElement(n.default.Fragment,null,t.map((function(e,t){return n.default.createElement(s.ProtoServiceMethod,{method:e,key:e.name+"-"+t})})))};s.ProtoService=function(e){var s=e.service;return n.default.createElement(n.default.Fragment,null,n.default.createElement("p",{style:{whiteSpace:"pre-wrap"}},s.description),n.default.createElement(r,{methods:s.methods}))};var i=function(e){var s=e.fields,t=function(e){var s=e.field,t=n.default.createElement("code",null,s.longType);return void 0===s.typeLink?t:n.default.createElement(l.default,{to:s.typeLink},t)};return n.default.createElement("table",null,n.default.createElement((function(){return n.default.createElement("thead",null,n.default.createElement("tr",null,n.default.createElement("th",null,"Name"),n.default.createElement("th",null,"Type"),n.default.createElement("th",null,"Description")))}),null),n.default.createElement((function(){return n.default.createElement("tbody",null,s.map((function(e){return n.default.createElement("tr",{key:e.name},n.default.createElement("td",null,n.default.createElement("code",null,e.name)),n.default.createElement("td",null,n.default.createElement(t,{field:e})),n.default.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description))})))}),null))};s.ProtoMessage=function(e){var s=e.message;return n.default.createElement(n.default.Fragment,null,n.default.createElement("p",{style:{whiteSpace:"pre-wrap"}},s.description),n.default.createElement(i,{fields:s.fields}))};s.default=function(e){var t=e.fileDescriptor,o=e.components;return n.default.createElement(n.default.Fragment,null,n.default.createElement(o.h1,null,t.name),n.default.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),t.messages.map((function(e,t){return n.default.createElement(s.ProtoMessage,{message:e,key:t})})))}},2597:function(e,s,t){t.r(s),t.d(s,{assets:function(){return d},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var o=t(7462),n=t(3366),l=(t(7294),t(3905)),a=t(9652),r=["components"],i={title:"consensus.proto",hide_title:!0},p=void 0,u={unversionedId:"consensus.proto",id:"consensus.proto",title:"consensus.proto",description:"consensus.proto",source:"@site/protodocs/consensus.proto.mdx",sourceDirName:".",slug:"/consensus.proto",permalink:"/protobuf/consensus.proto",draft:!1,tags:[],version:"current",frontMatter:{title:"consensus.proto",hide_title:!0},sidebar:"protodocs",previous:{title:"common.proto",permalink:"/protobuf/common.proto"},next:{title:"descriptor.proto",permalink:"/protobuf/descriptor.proto"}},d={},c=[{value:"<code>consensus.proto</code>",id:"consensusproto",level:2},{value:"Messages",id:"messages",level:2},{value:"<code>Block</code>",id:"block",level:3},{value:"<code>BlockHeader</code>",id:"blockheader",level:3},{value:"<code>ChainSpecMessage</code>",id:"chainspecmessage",level:3},{value:"<code>Error</code>",id:"error",level:3},{value:"<code>FinalizeRequest</code>",id:"finalizerequest",level:3},{value:"<code>FinalizeResponse</code>",id:"finalizeresponse",level:3},{value:"<code>Fork</code>",id:"fork",level:3},{value:"<code>Genesis</code>",id:"genesis",level:3},{value:"<code>GetAuthorRequest</code>",id:"getauthorrequest",level:3},{value:"<code>GetAuthorResponse</code>",id:"getauthorresponse",level:3},{value:"<code>HeadersRequest</code>",id:"headersrequest",level:3},{value:"<code>HeadersResponse</code>",id:"headersresponse",level:3},{value:"<code>PrepareRequest</code>",id:"preparerequest",level:3},{value:"<code>PrepareResponse</code>",id:"prepareresponse",level:3},{value:"<code>Result</code>",id:"result",level:3},{value:"<code>SealBlockRequest</code>",id:"sealblockrequest",level:3},{value:"<code>SealBlockResponse</code>",id:"sealblockresponse",level:3},{value:"<code>StartTestCaseMessage</code>",id:"starttestcasemessage",level:3},{value:"<code>Template</code>",id:"template",level:3},{value:"<code>Transaction</code>",id:"transaction",level:3},{value:"<code>VerifyHeaderRequest</code>",id:"verifyheaderrequest",level:3},{value:"<code>VerifyHeaderResponse</code>",id:"verifyheaderresponse",level:3},{value:"<code>VerifyUnclesRequest</code>",id:"verifyunclesrequest",level:3},{value:"<code>VerifyUnclesResponse</code>",id:"verifyunclesresponse",level:3},{value:"Services",id:"services",level:2},{value:"<code>ConsensusEngine</code>",id:"consensusengine",level:3},{value:"<code>GetAuthor</code>",id:"getauthor",level:4},{value:"<code>ChainSpec</code>",id:"chainspec",level:4},{value:"<code>VerifyHeaders</code>",id:"verifyheaders",level:4},{value:"<code>ProvideHeaders</code>",id:"provideheaders",level:4},{value:"<code>VerifyUncles</code>",id:"verifyuncles",level:4},{value:"<code>Prepare</code>",id:"prepare",level:4},{value:"<code>Finalize</code>",id:"finalize",level:4},{value:"<code>Seal</code>",id:"seal",level:4},{value:"<code>Test</code>",id:"test",level:3},{value:"<code>StartTestCase</code>",id:"starttestcase",level:4}],f={toc:c};function y(e){var s=e.components,t=(0,n.Z)(e,r);return(0,l.kt)("wrapper",(0,o.Z)({},f,t,{components:s,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"consensusproto"},(0,l.kt)("inlineCode",{parentName:"h2"},"consensus.proto")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"path")," consensus.proto")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"package")," consensus")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"messages"},"Messages"),(0,l.kt)("h3",{id:"block"},(0,l.kt)("inlineCode",{parentName:"h3"},"Block")),(0,l.kt)(a.ProtoMessage,{key:0,message:{name:"Block",longName:"Block",fullName:"consensus.Block",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"},{name:"uncles",description:"",label:"repeated",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"},{name:"transactions",description:"",label:"repeated",type:"Transaction",longType:"Transaction",fullType:"consensus.Transaction",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#transaction"},{name:"total_difficulty",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"blockheader"},(0,l.kt)("inlineCode",{parentName:"h3"},"BlockHeader")),(0,l.kt)(a.ProtoMessage,{key:1,message:{name:"BlockHeader",longName:"BlockHeader",fullName:"consensus.BlockHeader",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"template",description:"",label:"",type:"Template",longType:"Template",fullType:"consensus.Template",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#template"},{name:"uncle_hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"root_hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"tx_hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"receipt_hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"bloom",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"gas_used",description:"",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"mix_digest",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"chainspecmessage"},(0,l.kt)("inlineCode",{parentName:"h3"},"ChainSpecMessage")),(0,l.kt)(a.ProtoMessage,{key:2,message:{name:"ChainSpecMessage",longName:"ChainSpecMessage",fullName:"consensus.ChainSpecMessage",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"mechanism",description:"Name of consensus mechanism, e.g. ethash, clique, aura",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"mechanism_config",description:"Configuration of specific consensus mechanism - format is specific to the mechanism",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"genesis",description:"Description of genesis block",label:"",type:"Genesis",longType:"Genesis",fullType:"consensus.Genesis",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#genesis"},{name:"forks",description:"Description of forks (upgrades)",label:"repeated",type:"Fork",longType:"Fork",fullType:"consensus.Fork",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#fork"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"error"},(0,l.kt)("inlineCode",{parentName:"h3"},"Error")),(0,l.kt)(a.ProtoMessage,{key:3,message:{name:"Error",longName:"Error",fullName:"consensus.Error",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"code",description:"",label:"",type:"uint32",longType:"uint32",fullType:"uint32",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"description",description:"",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"finalizerequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"FinalizeRequest")),(0,l.kt)(a.ProtoMessage,{key:4,message:{name:"FinalizeRequest",longName:"FinalizeRequest",fullName:"consensus.FinalizeRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"},{name:"uncles",description:"",label:"repeated",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"finalizeresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"FinalizeResponse")),(0,l.kt)(a.ProtoMessage,{key:5,message:{name:"FinalizeResponse",longName:"FinalizeResponse",fullName:"consensus.FinalizeResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"},{name:"miner_reward",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"uncle_rewards",description:"",label:"repeated",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"fork"},(0,l.kt)("inlineCode",{parentName:"h3"},"Fork")),(0,l.kt)(a.ProtoMessage,{key:6,message:{name:"Fork",longName:"Fork",fullName:"consensus.Fork",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"name",description:"Code name of the fork",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"number",description:"First block number at which rules of the fork activate",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"chain_id",description:"Chain id starting from this fork until the next fork",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"genesis"},(0,l.kt)("inlineCode",{parentName:"h3"},"Genesis")),(0,l.kt)(a.ProtoMessage,{key:7,message:{name:"Genesis",longName:"Genesis",fullName:"consensus.Genesis",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"chain_id",description:"Chain id starting from genesis block and until the first fork",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"template",description:'Genesis header without values like "uncle hash", "tx hash" and "state root" calculated',label:"",type:"Template",longType:"Template",fullType:"consensus.Template",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#template"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"getauthorrequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetAuthorRequest")),(0,l.kt)(a.ProtoMessage,{key:8,message:{name:"GetAuthorRequest",longName:"GetAuthorRequest",fullName:"consensus.GetAuthorRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"getauthorresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetAuthorResponse")),(0,l.kt)(a.ProtoMessage,{key:9,message:{name:"GetAuthorResponse",longName:"GetAuthorResponse",fullName:"consensus.GetAuthorResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"},{name:"address",description:"",label:"",type:"H160",longType:"types.H160",fullType:"types.H160",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h160"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"headersrequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"HeadersRequest")),(0,l.kt)(a.ProtoMessage,{key:10,message:{name:"HeadersRequest",longName:"HeadersRequest",fullName:"consensus.HeadersRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"hash",description:"Hash of the highest header requested",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"amount",description:"Number of headers requested",label:"",type:"uint32",longType:"uint32",fullType:"uint32",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"headersresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"HeadersResponse")),(0,l.kt)(a.ProtoMessage,{key:11,message:{name:"HeadersResponse",longName:"HeadersResponse",fullName:"consensus.HeadersResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"preparerequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"PrepareRequest")),(0,l.kt)(a.ProtoMessage,{key:12,message:{name:"PrepareRequest",longName:"PrepareRequest",fullName:"consensus.PrepareRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"prepareresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"PrepareResponse")),(0,l.kt)(a.ProtoMessage,{key:13,message:{name:"PrepareResponse",longName:"PrepareResponse",fullName:"consensus.PrepareResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"result"},(0,l.kt)("inlineCode",{parentName:"h3"},"Result")),(0,l.kt)(a.ProtoMessage,{key:14,message:{name:"Result",longName:"Result",fullName:"consensus.Result",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!0,extensions:[],fields:[{name:"ok",description:"",label:"",type:"bool",longType:"bool",fullType:"bool",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"error",description:"",label:"optional",type:"Error",longType:"Error",fullType:"consensus.Error",ismap:!1,isoneof:!0,oneofdecl:"_error",defaultValue:"",typeLink:"/protobuf/consensus.proto#error"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"sealblockrequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"SealBlockRequest")),(0,l.kt)(a.ProtoMessage,{key:15,message:{name:"SealBlockRequest",longName:"SealBlockRequest",fullName:"consensus.SealBlockRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"},{name:"block",description:"",label:"",type:"Block",longType:"Block",fullType:"consensus.Block",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#block"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"sealblockresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"SealBlockResponse")),(0,l.kt)(a.ProtoMessage,{key:16,message:{name:"SealBlockResponse",longName:"SealBlockResponse",fullName:"consensus.SealBlockResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"},{name:"block",description:"",label:"",type:"Block",longType:"Block",fullType:"consensus.Block",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#block"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"starttestcasemessage"},(0,l.kt)("inlineCode",{parentName:"h3"},"StartTestCaseMessage")),(0,l.kt)(a.ProtoMessage,{key:17,message:{name:"StartTestCaseMessage",longName:"StartTestCaseMessage",fullName:"consensus.StartTestCaseMessage",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"mechanism",description:"Consensus mechanism used in the test case",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"config",description:"Configuration specific to the consensus engine tested",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"template"},(0,l.kt)("inlineCode",{parentName:"h3"},"Template")),(0,l.kt)(a.ProtoMessage,{key:18,message:{name:"Template",longName:"Template",fullName:"consensus.Template",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"parent_hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"coinbase",description:"",label:"",type:"H160",longType:"types.H160",fullType:"types.H160",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h160"},{name:"difficulty",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"number",description:"",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"gas_limit",description:"",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"time",description:"",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"extra",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"nonce",description:"",label:"",type:"uint64",longType:"uint64",fullType:"uint64",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"transaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"Transaction")),(0,l.kt)(a.ProtoMessage,{key:19,message:{name:"Transaction",longName:"Transaction",fullName:"consensus.Transaction",description:"",hasExtensions:!1,hasFields:!1,hasOneofs:!1,extensions:[],fields:[]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"verifyheaderrequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"VerifyHeaderRequest")),(0,l.kt)(a.ProtoMessage,{key:20,message:{name:"VerifyHeaderRequest",longName:"VerifyHeaderRequest",fullName:"consensus.VerifyHeaderRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"header",description:"",label:"",type:"BlockHeader",longType:"BlockHeader",fullType:"consensus.BlockHeader",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#blockheader"},{name:"seal",description:"",label:"",type:"bool",longType:"bool",fullType:"bool",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"verifyheaderresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"VerifyHeaderResponse")),(0,l.kt)(a.ProtoMessage,{key:21,message:{name:"VerifyHeaderResponse",longName:"VerifyHeaderResponse",fullName:"consensus.VerifyHeaderResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"hash",description:"",label:"",type:"H256",longType:"types.H256",fullType:"types.H256",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/types.proto#h256"},{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"},{name:"finaliseCode",description:"Code (in TEVM to execute at the end of the block to finalise it according to the consensus engine rules)",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"verifyunclesrequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"VerifyUnclesRequest")),(0,l.kt)(a.ProtoMessage,{key:22,message:{name:"VerifyUnclesRequest",longName:"VerifyUnclesRequest",fullName:"consensus.VerifyUnclesRequest",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"block",description:"",label:"",type:"Block",longType:"Block",fullType:"consensus.Block",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#block"}]},mdxType:"ProtoMessage"}),(0,l.kt)("h3",{id:"verifyunclesresponse"},(0,l.kt)("inlineCode",{parentName:"h3"},"VerifyUnclesResponse")),(0,l.kt)(a.ProtoMessage,{key:23,message:{name:"VerifyUnclesResponse",longName:"VerifyUnclesResponse",fullName:"consensus.VerifyUnclesResponse",description:"",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"result",description:"",label:"",type:"Result",longType:"Result",fullType:"consensus.Result",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:"",typeLink:"/protobuf/consensus.proto#result"}]},mdxType:"ProtoMessage"}),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"services"},"Services"),(0,l.kt)("h3",{id:"consensusengine"},(0,l.kt)("inlineCode",{parentName:"h3"},"ConsensusEngine")),(0,l.kt)("h4",{id:"getauthor"},(0,l.kt)("inlineCode",{parentName:"h4"},"GetAuthor")),(0,l.kt)(a.ProtoServiceMethod,{key:"GetAuthor-0",method:{name:"GetAuthor",description:"",requestType:"GetAuthorRequest",requestLongType:"GetAuthorRequest",requestFullType:"consensus.GetAuthorRequest",requestStreaming:!1,responseType:"GetAuthorResponse",responseLongType:"GetAuthorResponse",responseFullType:"consensus.GetAuthorResponse",responseStreaming:!1,requestTypeLink:"/protobuf/consensus.proto#getauthorrequest",responseTypeLink:"/protobuf/consensus.proto#getauthorresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"chainspec"},(0,l.kt)("inlineCode",{parentName:"h4"},"ChainSpec")),(0,l.kt)(a.ProtoServiceMethod,{key:"ChainSpec-1",method:{name:"ChainSpec",description:"",requestType:"Empty",requestLongType:".google.protobuf.Empty",requestFullType:"google.protobuf.Empty",requestStreaming:!1,responseType:"ChainSpecMessage",responseLongType:"ChainSpecMessage",responseFullType:"consensus.ChainSpecMessage",responseStreaming:!1,requestTypeLink:"/protobuf/empty.proto#empty",responseTypeLink:"/protobuf/consensus.proto#chainspecmessage"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"verifyheaders"},(0,l.kt)("inlineCode",{parentName:"h4"},"VerifyHeaders")),(0,l.kt)(a.ProtoServiceMethod,{key:"VerifyHeaders-2",method:{name:"VerifyHeaders",description:"Core requests verifications from the Consensus Engine via this function",requestType:"VerifyHeaderRequest",requestLongType:"VerifyHeaderRequest",requestFullType:"consensus.VerifyHeaderRequest",requestStreaming:!0,responseType:"VerifyHeaderResponse",responseLongType:"VerifyHeaderResponse",responseFullType:"consensus.VerifyHeaderResponse",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#verifyheaderrequest",responseTypeLink:"/protobuf/consensus.proto#verifyheaderresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"provideheaders"},(0,l.kt)("inlineCode",{parentName:"h4"},"ProvideHeaders")),(0,l.kt)(a.ProtoServiceMethod,{key:"ProvideHeaders-3",method:{name:"ProvideHeaders",description:"Consensis Engine may ask for extra informaton (more headers) from the core, and these requests are coming through the stream\nreturned by the ProvideHeaders function",requestType:"HeadersResponse",requestLongType:"HeadersResponse",requestFullType:"consensus.HeadersResponse",requestStreaming:!0,responseType:"HeadersRequest",responseLongType:"HeadersRequest",responseFullType:"consensus.HeadersRequest",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#headersresponse",responseTypeLink:"/protobuf/consensus.proto#headersrequest"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"verifyuncles"},(0,l.kt)("inlineCode",{parentName:"h4"},"VerifyUncles")),(0,l.kt)(a.ProtoServiceMethod,{key:"VerifyUncles-4",method:{name:"VerifyUncles",description:"",requestType:"VerifyUnclesRequest",requestLongType:"VerifyUnclesRequest",requestFullType:"consensus.VerifyUnclesRequest",requestStreaming:!0,responseType:"VerifyUnclesResponse",responseLongType:"VerifyUnclesResponse",responseFullType:"consensus.VerifyUnclesResponse",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#verifyunclesrequest",responseTypeLink:"/protobuf/consensus.proto#verifyunclesresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"prepare"},(0,l.kt)("inlineCode",{parentName:"h4"},"Prepare")),(0,l.kt)(a.ProtoServiceMethod,{key:"Prepare-5",method:{name:"Prepare",description:"",requestType:"PrepareRequest",requestLongType:"PrepareRequest",requestFullType:"consensus.PrepareRequest",requestStreaming:!0,responseType:"PrepareResponse",responseLongType:"PrepareResponse",responseFullType:"consensus.PrepareResponse",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#preparerequest",responseTypeLink:"/protobuf/consensus.proto#prepareresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"finalize"},(0,l.kt)("inlineCode",{parentName:"h4"},"Finalize")),(0,l.kt)(a.ProtoServiceMethod,{key:"Finalize-6",method:{name:"Finalize",description:"",requestType:"FinalizeRequest",requestLongType:"FinalizeRequest",requestFullType:"consensus.FinalizeRequest",requestStreaming:!0,responseType:"FinalizeResponse",responseLongType:"FinalizeResponse",responseFullType:"consensus.FinalizeResponse",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#finalizerequest",responseTypeLink:"/protobuf/consensus.proto#finalizeresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h4",{id:"seal"},(0,l.kt)("inlineCode",{parentName:"h4"},"Seal")),(0,l.kt)(a.ProtoServiceMethod,{key:"Seal-7",method:{name:"Seal",description:"",requestType:"SealBlockRequest",requestLongType:"SealBlockRequest",requestFullType:"consensus.SealBlockRequest",requestStreaming:!1,responseType:"SealBlockResponse",responseLongType:"SealBlockResponse",responseFullType:"consensus.SealBlockResponse",responseStreaming:!0,requestTypeLink:"/protobuf/consensus.proto#sealblockrequest",responseTypeLink:"/protobuf/consensus.proto#sealblockresponse"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("h3",{id:"test"},(0,l.kt)("inlineCode",{parentName:"h3"},"Test")),(0,l.kt)("p",null,"Test is only run by consensus engine in the testing mode, and allows the test driver to inject the Configuration\n(which includes chain spec) into the Consensus Engine and reset it's state"),(0,l.kt)("h4",{id:"starttestcase"},(0,l.kt)("inlineCode",{parentName:"h4"},"StartTestCase")),(0,l.kt)(a.ProtoServiceMethod,{key:"StartTestCase-0",method:{name:"StartTestCase",description:"",requestType:"StartTestCaseMessage",requestLongType:"StartTestCaseMessage",requestFullType:"consensus.StartTestCaseMessage",requestStreaming:!1,responseType:"Empty",responseLongType:".google.protobuf.Empty",responseFullType:"google.protobuf.Empty",responseStreaming:!1,requestTypeLink:"/protobuf/consensus.proto#starttestcasemessage",responseTypeLink:"/protobuf/empty.proto#empty"},mdxType:"ProtoServiceMethod"}),(0,l.kt)("hr",null))}y.isMDXComponent=!0}}]);