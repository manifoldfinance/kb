"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[520],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),h=a,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4677:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_position:1,id:"strat-sushiswap",title:"SushiSwap Integration and strategies",description:"Sushiswap Integration details and strategies in effect"},l="Manifold Finance & Sushiswap",p={unversionedId:"Strategies/strat-sushiswap",id:"Strategies/strat-sushiswap",title:"SushiSwap Integration and strategies",description:"Sushiswap Integration details and strategies in effect",source:"@site/docs/Strategies/Sushi-Guard.md",sourceDirName:"Strategies",slug:"/Strategies/strat-sushiswap",permalink:"/docs/Strategies/strat-sushiswap",draft:!1,editUrl:"https://github.com/manifoldfinance/kb/tree/trunk/docs/Strategies/Sushi-Guard.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"strat-sushiswap",title:"SushiSwap Integration and strategies",description:"Sushiswap Integration details and strategies in effect"},sidebar:"docsSidebar",previous:{title:"Block production in Ethereum after the Merge - HackMD",permalink:"/docs/reference/block-production"}},c={},u=[{value:"v1 Original",id:"v1-original",level:3},{value:"v2 Active",id:"v2-active",level:3},{value:"Support and Help",id:"support-and-help",level:2},{value:"Trading for Free on Sushi.com",id:"trading-for-free-on-sushicom",level:2},{value:"Getting Gas Pricing information",id:"getting-gas-pricing-information",level:3},{value:"Engine",id:"engine",level:2}],d={toc:u};function h(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"manifold-finance--sushiswap"},"Manifold Finance & Sushiswap"),(0,i.kt)("p",null,"There are two strategies, with more in the pipeline. The current strategy that is active is the v2 of OpenMev/SushiGard."),(0,i.kt)("h3",{id:"v1-original"},"v1 Original"),(0,i.kt)("p",null,"OpenMEV and Sushiswap work together to recapture lost MEV profits so that Sushi traders can trade for free (up to 95%) on the exchange."),(0,i.kt)("p",null,"These are not ",(0,i.kt)("inlineCode",{parentName:"p"},"gasless")," transactions, these are ",(0,i.kt)("inlineCode",{parentName:"p"},"paid rebate")," transactions! You get paid to trade more using OpenMEV."),(0,i.kt)("h3",{id:"v2-active"},"v2 Active"),(0,i.kt)("p",null,"See the SushiGuard RouterV01"),(0,i.kt)("h2",{id:"support-and-help"},"Support and Help"),(0,i.kt)("p",null,"!!! note We will never ask you to send tokens or coins anywhere!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://openmev.page.link/support"},"Support Page")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://openmev.page.link/support-chat"},"Discord Chat"))),(0,i.kt)("h2",{id:"trading-for-free-on-sushicom"},"Trading for Free on Sushi.com"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"baseFee")," amount is subject to transaction cost rebates")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Transactions with a slippage tolerance of 1% or higher are eligible for gas refunds")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Refunds are paid out in ETH/WETH/xSUSHI")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"It will take at least 35 blocks to receive a refund, no more than 50."))),(0,i.kt)("h3",{id:"getting-gas-pricing-information"},"Getting Gas Pricing information"),(0,i.kt)("p",null,"Our API Endpoint is here"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -s -L api.txprice.com | jq .blockPrices[0].estimatedPrices[3]\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "confidence": 80,\n    "price": 112,\n    "maxPriorityFeePerGas": 1.76,\n    "maxFeePerGas": 222.52\n}\n')),(0,i.kt)("h2",{id:"engine"},"Engine"),(0,i.kt)("p",null,"OpenMEV Engine uses a batch auction-based matching engine to execute orders. Batch auctions were chosen to reduce the impact of frontrunning on the exchange."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"All orders for the given market are collected.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Orders beyond their time-in-force are canceled.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%."))),(0,i.kt)("p",null,"Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s."))}h.isMDXComponent=!0}}]);