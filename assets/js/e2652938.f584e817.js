"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[4734],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=a,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||r;return n?i.createElement(m,o(o({ref:t},p),{},{components:n})):i.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8523:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),o=["components"],l={title:"Authentication",version:2022,id:"ref-auth"},s="Authentication",c={unversionedId:"reference/ref-auth",id:"reference/ref-auth",title:"Authentication",description:"The engine JSON-RPC interface, exposed by EL and consumed by CL, needs to be authenticated. The authentication scheme chosen for this purpose is JWT.",source:"@site/docs/reference/Authentication.md",sourceDirName:"reference",slug:"/reference/ref-auth",permalink:"/docs/reference/ref-auth",draft:!1,editUrl:"https://github.com/manifoldfinance/kb/tree/trunk/docs/reference/Authentication.md",tags:[],version:"current",frontMatter:{title:"Authentication",version:2022,id:"ref-auth"},sidebar:"docsSidebar",previous:{title:"Organization and Operations",permalink:"/docs/reference/ref-org"},next:{title:"SushiSwap Integration and strategies",permalink:"/docs/Strategies/strat-sushiswap"}},p={},u=[{value:"JWT specifications",id:"jwt-specifications",level:2},{value:"Key distribution",id:"key-distribution",level:2},{value:"JWT Claims",id:"jwt-claims",level:2},{value:"Examples",id:"examples",level:2}],h={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"engine")," JSON-RPC interface, exposed by EL and consumed by CL, needs to be authenticated. The authentication scheme chosen for this purpose is ",(0,r.kt)("a",{parentName:"p",href:"https://jwt.io/"},"JWT"),"."),(0,r.kt)("p",null,"The type of attacks that this authentication scheme attempts to protect against are the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RPC port exposed towards the internet, allowing attackers to exchange messages with EL engine API."),(0,r.kt)("li",{parentName:"ul"},"RPC port exposed towards the browser, allowing malicious webpages to submit messages to the EL engine API.")),(0,r.kt)("p",null,"The authentication scheme is ",(0,r.kt)("em",{parentName:"p"},"not")," designed to"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Prevent attackers with capability to read ('sniff') network traffic from reading the traffic,"),(0,r.kt)("li",{parentName:"ul"},"Prevent attackers with capability to read ('sniff') network traffic from performing replay-attacks of earlier messages.")),(0,r.kt)("p",null,"Authentication is performed as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For ",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP")," dialogue, each ",(0,r.kt)("inlineCode",{parentName:"li"},"jsonrpc")," request is individually authenticated by supplying ",(0,r.kt)("inlineCode",{parentName:"li"},"JWT")," token in the HTTP header."),(0,r.kt)("li",{parentName:"ul"},"For a WebSocket dialogue, only the initial handshake is authenticated, after which the message dialogue proceeds without further use of JWT.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Clarification: The websocket handshake starts with the client performing a websocket upgrade request. This is a regular http GET request, and the actual parameters for the WS-handshake are carried in the http headers."))),(0,r.kt)("li",{parentName:"ul"},"For ",(0,r.kt)("inlineCode",{parentName:"li"},"inproc"),", a.k.a raw ipc communication, no authentication is required, under the assumption that a process able to access ",(0,r.kt)("inlineCode",{parentName:"li"},"ipc")," channels for the process, which usually means local file access, is already sufficiently permissioned that further authentication requirements do not add security.")),(0,r.kt)("h2",{id:"jwt-specifications"},"JWT specifications"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Client software MUST expose the authenticated Engine API at a port independent from existing JSON-RPC API.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The default port for the authenticated Engine API is ",(0,r.kt)("inlineCode",{parentName:"li"},"8551"),". The Engine API is exposed under the ",(0,r.kt)("inlineCode",{parentName:"li"},"engine")," namespace."))),(0,r.kt)("li",{parentName:"ul"},"The EL ",(0,r.kt)("strong",{parentName:"li"},"MUST")," support at least the following ",(0,r.kt)("inlineCode",{parentName:"li"},"alg")," ",(0,r.kt)("inlineCode",{parentName:"li"},"HMAC + SHA256")," (",(0,r.kt)("inlineCode",{parentName:"li"},"HS256"),")"),(0,r.kt)("li",{parentName:"ul"},"The EL ",(0,r.kt)("strong",{parentName:"li"},"MUST")," reject the ",(0,r.kt)("inlineCode",{parentName:"li"},"alg")," ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),".")),(0,r.kt)("p",null,"The HMAC algorithm implies that several CLs will be able to use the same key, and from an authentication perspective, be able to impersonate each other. From a deployment perspective, it means that an EL does not need to be provisioned with individual keys for each CL."),(0,r.kt)("h2",{id:"key-distribution"},"Key distribution"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"EL")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"CL")," clients ",(0,r.kt)("strong",{parentName:"p"},"MUST")," accept a cli/config parameter: ",(0,r.kt)("inlineCode",{parentName:"p"},"jwt-secret"),", which designates a file containing the hex-encoded 256 bit secret key to be used for verifying/generating JWT tokens."),(0,r.kt)("p",null,"If such a parameter is not given, the client ",(0,r.kt)("strong",{parentName:"p"},"SHOULD")," generate such a token, valid for the duration of the execution, and store the hex-encoded secret as a ",(0,r.kt)("inlineCode",{parentName:"p"},"jwt.hex")," file on the filesystem. This file can then be used to provision the counterpart client."),(0,r.kt)("p",null,"If such a parameter ",(0,r.kt)("em",{parentName:"p"},"is")," given, but the file cannot be read, or does not contain a hex-encoded key of ",(0,r.kt)("inlineCode",{parentName:"p"},"256")," bits, the client should treat this as an error: either abort the startup, or show error and continue without exposing the authenticated port."),(0,r.kt)("h2",{id:"jwt-claims"},"JWT Claims"),(0,r.kt)("p",null,"This specification utilizes the following list of JWT claims:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Required: ",(0,r.kt)("inlineCode",{parentName:"li"},"iat")," (issued-at) claim. The EL ",(0,r.kt)("strong",{parentName:"li"},"SHOULD")," only accept ",(0,r.kt)("inlineCode",{parentName:"li"},"iat")," timestamps which are within +-5 seconds from the current time."),(0,r.kt)("li",{parentName:"ul"},"Optional: ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," claim. The CL ",(0,r.kt)("strong",{parentName:"li"},"MAY")," use this to communicate a unique identifier for the individual CL node."),(0,r.kt)("li",{parentName:"ul"},"Optional: ",(0,r.kt)("inlineCode",{parentName:"li"},"clv")," claim. The CL ",(0,r.kt)("strong",{parentName:"li"},"MAY")," use this to communicate the CL node type/version.")),(0,r.kt)("p",null,"Other claims ",(0,r.kt)("strong",{parentName:"p"},"MAY")," be included in the JWT payload. If the EL sees claims it does not recognize, these ",(0,r.kt)("strong",{parentName:"p"},"MUST")," be ignored."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Todo, add some examples of JWT authentication here."))}d.isMDXComponent=!0}}]);