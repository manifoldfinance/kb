"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[9168],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,k=u["".concat(d,".").concat(m)]||u[m]||p[m]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6878:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={title:"SecureRpc Specification V01.601",version:"2022.05.11, 2022.06.01",author:"CommoidtyStream, Inc",license:"COPYRIGHT 2022, CommoidtyStream, Inc.",sidebar_position:1,id:"protocol-backbonev01",description:"SecureRpc Network Reference"},d="SecureRpc Network Reference",s={unversionedId:"Protocol/protocol-backbonev01",id:"Protocol/protocol-backbonev01",title:"SecureRpc Specification V01.601",description:"SecureRpc Network Reference",source:"@site/docs/Protocol/BackboneV01.md",sourceDirName:"Protocol",slug:"/Protocol/protocol-backbonev01",permalink:"/docs/Protocol/protocol-backbonev01",draft:!1,editUrl:"https://github.com/manifoldfinance/kb/tree/trunk/docs/Protocol/BackboneV01.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"SecureRpc Specification V01.601",version:"2022.05.11, 2022.06.01",author:"CommoidtyStream, Inc",license:"COPYRIGHT 2022, CommoidtyStream, Inc.",sidebar_position:1,id:"protocol-backbonev01",description:"SecureRpc Network Reference"},sidebar:"docsSidebar",previous:{title:"Protocol",permalink:"/docs/category/protocol"},next:{title:"FOLD Token",permalink:"/docs/category/fold-token"}},c={},p=[{value:"Overview",id:"overview",level:2},{value:"Mempool behavior",id:"mempool-behavior",level:3},{value:"Transaction ordering",id:"transaction-ordering",level:3},{value:"Transaction ID&#39;s",id:"transaction-ids",level:3},{value:"Removing and replacing transactions",id:"removing-and-replacing-transactions",level:3},{value:"Automatic error messages",id:"automatic-error-messages",level:2},{value:"Logging",id:"logging",level:3},{value:"Supported hardforks",id:"supported-hardforks",level:2},{value:"Flashbots/MEV Geth RPC Methods",id:"flashbotsmev-geth-rpc-methods",level:2},{value:"<code>eth_sendBundle</code>",id:"eth_sendbundle",level:3},{value:"<code>eth_callBundle</code>",id:"eth_callbundle",level:3},{value:"<code>eth_callMultiBundle</code>",id:"eth_callmultibundle",level:3},{value:"Manifold SecureRpc Methods",id:"manifold-securerpc-methods",level:2},{value:"<code>manifold_dropTransaction</code>",id:"manifold_droptransaction",level:3},{value:"<code>manifold_evictTransaction</code>",id:"manifold_evicttransaction",level:3},{value:"<code>manifold_setLoggingEnabled</code>",id:"manifold_setloggingenabled",level:3},{value:"<code>manifold_CreateAccessList</code>",id:"manifold_createaccesslist",level:3},{value:"<code>eth_multiCall</code>",id:"eth_multicall",level:3},{value:"Parity Methods",id:"parity-methods",level:2},{value:"<code>trace_call</code>",id:"trace_call",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Request",id:"request",level:4},{value:"Response",id:"response",level:5},{value:"<code>trace_callMany</code>",id:"trace_callmany",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Request",id:"request-1",level:4},{value:"Response",id:"response-1",level:4},{value:"<code>trace_rawTransaction</code>",id:"trace_rawtransaction",level:3},{value:"<code>Parameters</code>",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Request",id:"request-2",level:4},{value:"<code>trace_replayBlockTransactions</code>",id:"trace_replayblocktransactions",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Request",id:"request-3",level:4},{value:"Response",id:"response-2",level:4},{value:"<code>trace_replayTransaction</code>",id:"trace_replaytransaction",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Request",id:"request-4",level:4},{value:"Response",id:"response-3",level:4},{value:"<code>trace_block</code>",id:"trace_block",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Request",id:"request-5",level:4},{value:"Response",id:"response-4",level:4},{value:"<code>trace_filter</code>",id:"trace_filter",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Request",id:"request-6",level:4},{value:"Response",id:"response-5",level:4},{value:"<code>trace_get</code>",id:"trace_get",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Request",id:"request-7",level:4},{value:"Response",id:"response-6",level:4},{value:"<code>trace_transaction</code>",id:"trace_transaction",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Request",id:"request-8",level:4},{value:"Relay Switchboard",id:"relay-switchboard",level:2},{value:"Global Virtual Mempool",id:"global-virtual-mempool",level:2},{value:"<code>manifold_txpool_health</code>",id:"manifold_txpool_health",level:3},{value:"<code>manifold_txpool_map</code>",id:"manifold_txpool_map",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"<code>manifold_txpool_search</code>",id:"manifold_txpool_search",level:3},{value:"Parameters",id:"parameters-10",level:4}],u={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"securerpc-network-reference"},"SecureRpc Network Reference"),(0,l.kt)("p",null,"v01.601 Specification Document"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"CDN"),": CDN-like block propagation network that utilizes optimizations for filtering and connecting nodes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Front-running protection:")," transactions will not be seen by generalized bots in the public mempool.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"No failed transactions:")," transactions will only be mined if it doesn't include any reverts, so users don't pay for failed transactions. Note: transactions could be included in uncle blocks, emitted to the mempool, and then included on-chain.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Priority in blocks"),": transactions sent via SecureRPC are mined either at the top OR bottom of blocks, giving end-users flexibility in their use cases.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Transaction Status integration:")," users can see the status of their transactions on either Etherscan or via our API.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Backfilling")))),(0,l.kt)("h3",{id:"mempool-behavior"},"Mempool behavior"),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"OpenMEV")," is ",(0,l.kt)("em",{parentName:"p"},"disabled"),", every sent transaction is added to the mempool, which contains all the transactions that could be mined in the future. By default, SecureRpc Network's mempool follows the same rules as Geth. This means, among other things, that:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Transactions with a higher gas price are included first")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If two transactions can be included and both are offering the miner the same total fees, the one that was received first is included first")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a transaction is invalid (for example, its nonce is lower than the nonce of the address that sent it), the transaction is dropped."))),(0,l.kt)("p",null,'You can get the list of pending transactions that will be included in the next block by using the "pending" block tag:'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"twoslash",twoslash:!0},'const pendingBlock = await network.provider.send("eth_getBlockByNumber", ["pending", false]);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"twoslash",twoslash:!0},'const pendingBlock = await ethers.provider.send("eth_getBlockByNumber", ["latest", false]);\nblockGasLimit = BigNumber.from(pendingBlock.gasLimit);\n')),(0,l.kt)("h3",{id:"transaction-ordering"},"Transaction ordering"),(0,l.kt)("p",null,"SecureRpc Network can sort mempool transactions in two different ways. How they are sorted will alter which transactions from the mempool get included in the next block, and in which order."),(0,l.kt)("p",null,"The first ordering mode, called ",(0,l.kt)("inlineCode",{parentName:"p"},'"priority"'),", mimics Geth's behavior. This means that it prioritizes transactions based on the fees paid to the miner. This is the default."),(0,l.kt)("p",null,"The second ordering mode, called ",(0,l.kt)("inlineCode",{parentName:"p"},'"fifo"'),", keeps the mempool transactions sorted in the order they arrive."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://brandur.org/nanoglyphs/027-15-minutes#randomness"},"see https://brandur.org/nanoglyphs/027-15-minutes#randomness"))),(0,l.kt)("h3",{id:"transaction-ids"},"Transaction ID's"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.cockroachlabs.com/blog/how-to-choose-db-index-keys/"},"see https://www.cockroachlabs.com/blog/how-to-choose-db-index-keys/")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Uses Crockford's base32 for better efficiency and readability (5 bits per character)."),(0,l.kt)("li",{parentName:"ul"},"Case insensitive."),(0,l.kt)("li",{parentName:"ul"},"No special characters (URL safe)."),(0,l.kt)("li",{parentName:"ul"},"Monotonic sort order (correctly detects and handles the same millisecond).")),(0,l.kt)("p",null,"Notes: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tvondra/sequential-uuids#design"},"see postgres ext. that uses ID's that wrap around every 45 days, maybe for consideration as thats when we remove data?")),(0,l.kt)("h3",{id:"removing-and-replacing-transactions"},"Removing and replacing transactions"),(0,l.kt)("p",null,"Transactions in the mempool can be removed using the ",(0,l.kt)("inlineCode",{parentName:"p"},"manifold_dropTransaction")," method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'const txHash = "0xabc...";\nawait network.provider.send("hardhat_dropTransaction", [txHash]);\n')),(0,l.kt)("p",null,"You can also replace a transaction by sending a new one with the same nonce as the one that it's already in the mempool but with a higher gas price. Keep in mind that, like in Go-Ethereum, for this to work the new gas/fees prices have to be at least 10% higher than the gas price of the current transaction."),(0,l.kt)("h2",{id:"automatic-error-messages"},"Automatic error messages"),(0,l.kt)("p",null,"SecureRpc Network always knows why your transaction or call failed, and it uses this information to make debugging your contracts easier."),(0,l.kt)("p",null,"When a transaction fails without a reason, SecureRpc Network will create a clear error message in the following cases:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Calling a non-payable function with ETH"),(0,l.kt)("li",{parentName:"ul"},"Sending ETH to a contract without a payable fallback or receive function"),(0,l.kt)("li",{parentName:"ul"},"Calling a non-existent function when there's no fallback function"),(0,l.kt)("li",{parentName:"ul"},"Calling a function with incorrect parameters"),(0,l.kt)("li",{parentName:"ul"},"Calling an external function that doesn't return the right amount of data"),(0,l.kt)("li",{parentName:"ul"},"Calling an external function on a non-contract account"),(0,l.kt)("li",{parentName:"ul"},"Failing to execute an external call because of its parameters (e.g. trying to send too much ETH)"),(0,l.kt)("li",{parentName:"ul"},"Calling a library without ",(0,l.kt)("inlineCode",{parentName:"li"},"DELEGATECALL")),(0,l.kt)("li",{parentName:"ul"},"Incorrectly calling a precompiled contract"),(0,l.kt)("li",{parentName:"ul"},"Trying to deploy a contract that exceeds the bytecode size limit imposed by ",(0,l.kt)("inlineCode",{parentName:"li"},"EIP-170"))),(0,l.kt)("h3",{id:"logging"},"Logging"),(0,l.kt)("p",null,"SecureRpc Network uses its tracing infrastructure to offer rich logging that will help you develop and debug smart contracts."),(0,l.kt)("p",null,"For example, a successful transaction and a failed call would look like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"eth_sendTransaction\n  Contract deployment: Greeter\n  Contract address: 0x8858eeb3dfffa017d4bce9801d340d36cf895ccf\n  Transaction: 0x7ea2754e53f09508d42bd3074046f90595bedd61fcdf75a4764453454733add0\n  From: 0xc783df8a850f42e7f7e57013759c285caa701eb6\n  Value: 0 ETH\n  Gas used: 568851 of 2844255\n  Block: #2 - Hash: 0x4847b316b12170c576999183da927c2f2056aa7d8f49f6e87430e6654a56dab0\n\n  console.log:\n    Deploying a Greeter with greeting: Hello, world!\n\neth_call\n  Contract call: Greeter#greet\n  From: 0xc783df8a850f42e7f7e57013759c285caa701eb6\n\n  Error: VM Exception while processing transaction: revert Not feeling like it\n      at Greeter.greet (contracts/Greeter.sol:14)\n      at process._tickCallback (internal/process/next_tick.js:68:7)\n")),(0,l.kt)("h2",{id:"supported-hardforks"},"Supported hardforks"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Hardfork"),(0,l.kt)("th",{parentName:"tr",align:null},"blockNumber"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FHomestead"),(0,l.kt)("td",{parentName:"tr",align:null},"1150000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FTangerineWhistle"),(0,l.kt)("td",{parentName:"tr",align:null},"2463000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FSpuriousDragon"),(0,l.kt)("td",{parentName:"tr",align:null},"2675000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FByzantium"),(0,l.kt)("td",{parentName:"tr",align:null},"4370000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FConstantinople"),(0,l.kt)("td",{parentName:"tr",align:null},"7280000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FPetersburg"),(0,l.kt)("td",{parentName:"tr",align:null},"7280000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FIstanbul"),(0,l.kt)("td",{parentName:"tr",align:null},"9069000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FMuirGlacier"),(0,l.kt)("td",{parentName:"tr",align:null},"9200000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FBerlin"),(0,l.kt)("td",{parentName:"tr",align:null},"12244000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FLondon"),(0,l.kt)("td",{parentName:"tr",align:null},"12965000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FArrowGlacier"),(0,l.kt)("td",{parentName:"tr",align:null},"13773000")))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"^1")),(0,l.kt)("h1",{id:"custom-rpc-methods"},"Custom RPC Methods"),(0,l.kt)("h2",{id:"flashbotsmev-geth-rpc-methods"},"Flashbots/MEV Geth RPC Methods"),(0,l.kt)("h3",{id:"eth_sendbundle"},(0,l.kt)("inlineCode",{parentName:"h3"},"eth_sendBundle")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"flashbots standard latest")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ethSendBundle")," can be used to send your bundles to the relay."),(0,l.kt)("h3",{id:"eth_callbundle"},(0,l.kt)("inlineCode",{parentName:"h3"},"eth_callBundle")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"eth_callBundle")," can be used to simulate a bundle against a specific block number, including simulating a bundle at the top of the next block."),(0,l.kt)("h3",{id:"eth_callmultibundle"},(0,l.kt)("inlineCode",{parentName:"h3"},"eth_callMultiBundle")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"eth_callMultiBundle")," Multi CallBundle will simulate a bundle of transactions on top of the most recent block. Partially follows flashbots spec v0.5."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-golang"},'// CallBundleArgs represents the arguments for a bundle of calls.\ntype CallBundleArgs struct {\n    Txs        []TransactionArgs `json:"txs"`\n    Coinbase   *string           `json:"coinbase"`\n    Timestamp  *uint64           `json:"timestamp"`\n    Timeout    *int64            `json:"timeout"`\n    GasLimit   *uint64           `json:"gasLimit"`\n    Difficulty *big.Int          `json:"difficulty"`\n    BaseFee    *big.Int          `json:"baseFee"`\n}\n')),(0,l.kt)("h2",{id:"manifold-securerpc-methods"},"Manifold SecureRpc Methods"),(0,l.kt)("h3",{id:"manifold_droptransaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_dropTransaction")),(0,l.kt)("p",null,"Remove a transaction from the mempool (must be signed by originating account)"),(0,l.kt)("h3",{id:"manifold_evicttransaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_evictTransaction")),(0,l.kt)("p",null,"Remove a transaction from the mempool (admin only)"),(0,l.kt)("h3",{id:"manifold_setloggingenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_setLoggingEnabled")),(0,l.kt)("p",null,"Enable or disable logging in SecureRpc Network (auth required)"),(0,l.kt)("h3",{id:"manifold_createaccesslist"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_CreateAccessList")),(0,l.kt)("p",null,"takes ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_callBundle")," and adds the arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"SimulationLogs bool"),(0,l.kt)("li",{parentName:"ul"},"CreateAccessList bool")),(0,l.kt)("h3",{id:"eth_multicall"},(0,l.kt)("inlineCode",{parentName:"h3"},"eth_multiCall")),(0,l.kt)("p",null,"implements ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_call"),". Executes a new message call immediately without creating a transaction on the block chain."),(0,l.kt)("h2",{id:"parity-methods"},"Parity Methods"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"trace_rawTransaction")),(0,l.kt)("p",null,"trace Transaction trace. An equivalent trace to that in the previous section. vmTrace Virtual Machine execution trace. Provides a full trace of the VM\u2019s state throughout the execution of the transaction, including for any subcalls."),(0,l.kt)("p",null,"stateDiff State difference. Provides information detailing all altered portions of the Ethereum state made due to the execution of the transaction."),(0,l.kt)("h3",{id:"trace_call"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_call")),(0,l.kt)("p",null,"Executes the given call and returns a number of possible traces for it."),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"where ",(0,l.kt)("inlineCode",{parentName:"td"},"from")," field is optional and ",(0,l.kt)("inlineCode",{parentName:"td"},"nonce")," field is ommited.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Quantity, or 'tag'"),(0,l.kt)("td",{parentName:"tr",align:null},"Integer of a block number, or the string ",(0,l.kt)("inlineCode",{parentName:"td"},"'earliest'"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"'latest'")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"'pending'"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of trace, one or more of: ",(0,l.kt)("inlineCode",{parentName:"td"},'"vmTrace"'),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"trace"'),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"stateDiff"'),".")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Block traces")),(0,l.kt)("h4",{id:"request"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"method":"trace_call","params":[{ ... },["trace"]],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json" -X POST localhost:8545\n')),(0,l.kt)("h5",{id:"response"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "output": "0x",\n    "stateDiff": null,\n    "trace": [{\n      "action": { ... },\n      "result": {\n        "gasUsed": "0x0",\n        "output": "0x"\n      },\n      "subtraces": 0,\n      "traceAddress": [],\n      "type": "call"\n    }],\n    "vmTrace": null\n  }\n}\n')),(0,l.kt)("h3",{id:"trace_callmany"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_callMany")),(0,l.kt)("p",null,"Performs multiple call traces on top of the same block. i.e. transaction ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," will be executed on top of a pending block with all ",(0,l.kt)("inlineCode",{parentName:"p"},"n-1")," transactions applied (traced) first. Allows to trace dependent transactions."),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - List of trace calls with the type of trace, one or more of: ",(0,l.kt)("inlineCode",{parentName:"li"},'"vmTrace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"trace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"stateDiff"'),"."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"Tag")," - (optional) integer block number, or the string ",(0,l.kt)("inlineCode",{parentName:"li"},"'latest'"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"'earliest'")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"'pending'"),", see the ",(0,l.kt)("a",{parentName:"li",href:"https://openethereum.github.io/JSONRPC-trace-module#the-default-block-parameter"},"default block parameter"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'params: [\n  [\n    [\n      {\n        "from": "0x407d73d8a49eeb85d32cf465507dd71d507100c1",\n        "to": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",\n        "value": "0x186a0"\n      },\n      ["trace"]\n    ],\n    [\n      {\n        "from": "0x407d73d8a49eeb85d32cf465507dd71d507100c1",\n        "to": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",\n        "value": "0x186a0"\n      },\n      ["trace"]\n    ]\n  ],\n  "latest"\n]\n')),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Array of the given transactions\u2019 traces")),(0,l.kt)("h4",{id:"request-1"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"method":"trace_callMany","params":[[[{"from":"0x407d73d8a49eeb85d32cf465507dd71d507100c1","to":"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b","value":"0x186a0"},["trace"]],[{"from":"0x407d73d8a49eeb85d32cf465507dd71d507100c1","to":"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b","value":"0x186a0"},["trace"]]],"latest"],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json" -X POST localhost:8545\n')),(0,l.kt)("h4",{id:"response-1"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": [\n        {\n            "output": "0x",\n            "stateDiff": null,\n            "trace": [\n                {\n                    "action": {\n                        "callType": "call",\n                        "from": "0x407d73d8a49eeb85d32cf465507dd71d507100c1",\n                        "gas": "0x1dcd12f8",\n                        "input": "0x",\n                        "to": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",\n                        "value": "0x186a0"\n                    },\n                    "result": {\n                        "gasUsed": "0x0",\n                        "output": "0x"\n                    },\n                    "subtraces": 0,\n                    "traceAddress": [],\n                    "type": "call"\n                }\n            ],\n            "vmTrace": null\n        },\n        {\n            "output": "0x",\n            "stateDiff": null,\n            "trace": [\n                {\n                    "action": {\n                        "callType": "call",\n                        "from": "0x407d73d8a49eeb85d32cf465507dd71d507100c1",\n                        "gas": "0x1dcd12f8",\n                        "input": "0x",\n                        "to": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",\n                        "value": "0x186a0"\n                    },\n                    "result": {\n                        "gasUsed": "0x0",\n                        "output": "0x"\n                    },\n                    "subtraces": 0,\n                    "traceAddress": [],\n                    "type": "call"\n                }\n            ],\n            "vmTrace": null\n        }\n    ]\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"trace_rawtransaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_rawTransaction")),(0,l.kt)("p",null,"Traces a call to ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_sendRawTransaction")," without making the call, returning the traces"),(0,l.kt)("h4",{id:"parameters-2"},(0,l.kt)("inlineCode",{parentName:"h4"},"Parameters")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Data")," - Raw transaction data."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Type of trace, one or more of: ",(0,l.kt)("inlineCode",{parentName:"li"},'"vmTrace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"trace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"stateDiff"'),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "params": ["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675", ["trace"]]\n}\n')),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Object")," - Block traces.")),(0,l.kt)("h4",{id:"request-2"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\'{"method":"trace_rawTransaction","params":["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675",["trace"]],"id":1,"jsonrpc":"2.0"}\'\n')),(0,l.kt)("p",null,"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "output": "0x",\n    "stateDiff": null,\n    "trace": [{\n      "action": { ... },\n      "result": {\n        "gasUsed": "0x0",\n        "output": "0x"\n      },\n      "subtraces": 0,\n      "traceAddress": [],\n      "type": "call"\n    }],\n    "vmTrace": null\n  }\n}\n')),(0,l.kt)("h3",{id:"trace_replayblocktransactions"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_replayBlockTransactions")),(0,l.kt)("p",null,"Replays all transactions in a block returning the requested traces for each transaction."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Quantity, or 'tag'"),(0,l.kt)("td",{parentName:"tr",align:null},"Integer of a block number, or the string ",(0,l.kt)("inlineCode",{parentName:"td"},"'earliest'"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"'latest'")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"'pending'"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of trace, one or more of: ",(0,l.kt)("inlineCode",{parentName:"td"},'"vmTrace"'),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"trace"'),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"stateDiff"'),".")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'params: [\n  "0x2ed119",\n  ["trace"]\n]\n')),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Block transactions traces.")),(0,l.kt)("h4",{id:"request-3"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"method":"trace_replayBlockTransactions","params":["0x2ed119",["trace"]],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json" -X POST localhost:8545\n')),(0,l.kt)("h4",{id:"response-2"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "output": "0x",\n      "stateDiff": null,\n      "trace": [{\n        "action": { ... },\n        "result": {\n          "gasUsed": "0x0",\n          "output": "0x"\n        },\n        "subtraces": 0,\n        "traceAddress": [],\n        "type": "call"\n      }],\n      "transactionHash": "0x...",\n      "vmTrace": null\n    },\n    { ... }\n  ]\n}\n')),(0,l.kt)("h3",{id:"trace_replaytransaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_replayTransaction")),(0,l.kt)("p",null,"Replays a transaction, returning the traces."),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Hash")," - Transaction hash."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Type of trace, one or more of: ",(0,l.kt)("inlineCode",{parentName:"li"},'"vmTrace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"trace"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"stateDiff"'),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{ "params": ["0x02d4a872e096445e80d05276ee756cefef7f3b376bcec14246469c0cd97dad8f", ["trace"]] }\n')),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Object")," - Block traces.")),(0,l.kt)("h4",{id:"request-4"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"method":"trace_replayTransaction","params":["0x02d4a872e096445e80d05276ee756cefef7f3b376bcec14246469c0cd97dad8f",["trace"]],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json" -X POST localhost:8545\n')),(0,l.kt)("h4",{id:"response-3"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": {\n    "output": "0x",\n    "stateDiff": null,\n    "trace": [{\n      "action": { ... },\n      "result": {\n        "gasUsed": "0x0",\n        "output": "0x"\n      },\n      "subtraces": 0,\n      "traceAddress": [],\n      "type": "call"\n    }],\n    "vmTrace": null\n  }\n}\n')),(0,l.kt)("h3",{id:"trace_block"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_block")),(0,l.kt)("p",null,"Returns traces created at given block."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"Tag")," - Integer of a block number, or the string ",(0,l.kt)("inlineCode",{parentName:"li"},"'earliest'"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"'latest'")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"'pending'"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"params": [\n  "0x2ed119" // 3068185\n]\n')),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Block traces.")),(0,l.kt)("h4",{id:"request-5"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"{\\"method\\":\\"trace_block\\",\\"params\\":[\\"0x2ed119\\"],\\"id\\":1,\\"jsonrpc\\":\\"2.0\\"}"\n')),(0,l.kt)("h4",{id:"response-4"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "action": {\n        "callType": "call",\n        "from": "0xaa7b131dc60b80d3cf5e59b5a21a666aa039c951",\n        "gas": "0x0",\n        "input": "0x",\n        "to": "0xd40aba8166a212d6892125f079c33e6f5ca19814",\n        "value": "0x4768d7effc3fbe"\n      },\n      "blockHash": "0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add",\n      "blockNumber": 3068185,\n      "result": {\n        "gasUsed": "0x0",\n        "output": "0x"\n      },\n      "subtraces": 0,\n      "traceAddress": [],\n      "transactionHash": "0x07da28d752aba3b9dd7060005e554719c6205c8a3aea358599fc9b245c52f1f6",\n      "transactionPosition": 0,\n      "type": "call"\n    },\n    ...\n  ]\n}\n')),(0,l.kt)("h3",{id:"trace_filter"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_filter")),(0,l.kt)("p",null,"Returns traces matching given filter"),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"The filter object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"fromBlock")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Quantity")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Tag")," - (optional) From this block.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"toBlock")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Quantity")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Tag")," - (optional) To this block.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"fromAddress")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Array")," - (optional) Sent from these addresses.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"toAddress")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Address")," - (optional) Sent to these addresses.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"after")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Quantity")," - (optional) The offset trace number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"- ",(0,l.kt)("inlineCode",{parentName:"td"},"count")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Quantity")," - (optional) Integer number of traces to display in a batch.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'params: [{\n  "fromBlock": "0x2ed0c4", // 3068100\n  "toBlock": "0x2ed128", // 3068200\n  "toAddress": ["0x8bbB73BCB5d553B5A556358d27625323Fd781D37"],\n  "after": 1000,\n  "count": 100\n}]\n')),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Traces matching given filter")),(0,l.kt)("h4",{id:"request-6"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'\'{"method":"trace_filter","params":[{"fromBlock":"0x2ed0c4","toBlock":"0x2ed128","toAddress":["0x8bbB73BCB5d553B5A556358d27625323Fd781D37"],"after":1000,"count":100}],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json"\n')),(0,l.kt)("h4",{id:"response-5"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "action": {\n        "callType": "call",\n        "from": "0x32be343b94f860124dc4fee278fdcbd38c102d88",\n        "gas": "0x4c40d",\n        "input": "0x",\n        "to": "0x8bbb73bcb5d553b5a556358d27625323fd781d37",\n        "value": "0x3f0650ec47fd240000"\n      },\n      "blockHash": "0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f",\n      "blockNumber": 3068183,\n      "result": {\n        "gasUsed": "0x0",\n        "output": "0x"\n      },\n      "subtraces": 0,\n      "traceAddress": [],\n      "transactionHash": "0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104",\n      "transactionPosition": 3,\n      "type": "call"\n    },\n    ...\n  ]\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"trace_get"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_get")),(0,l.kt)("p",null,"Returns trace at given position."),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Hash"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes (req.)"),(0,l.kt)("td",{parentName:"tr",align:null},"Transaction hash.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes (req.)"),(0,l.kt)("td",{parentName:"tr",align:null},"Index positions of the traces.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'params: [\n  "0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3",\n  ["0x0"]\n]\n')),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Object")," - Trace object")),(0,l.kt)("h4",{id:"request-7"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --data \'{"method":"trace_get","params":["0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3",["0x0"]],"id":1,"jsonrpc":"2.0"}\' -H "Content-Type: application/json" -X POST localhost:8545\n')),(0,l.kt)("h4",{id:"response-6"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": {\n        "action": {\n            "callType": "call",\n            "from": "0x1c39ba39e4735cb65978d4db400ddd70a72dc750",\n            "gas": "0x13e99",\n            "input": "0x16c72721",\n            "to": "0x2bd2326c993dfaef84f696526064ff22eba5b362",\n            "value": "0x0"\n        },\n        "blockHash": "0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add",\n        "blockNumber": 3068185,\n        "result": {\n            "gasUsed": "0x183",\n            "output": "0x0000000000000000000000000000000000000000000000000000000000000001"\n        },\n        "subtraces": 0,\n        "traceAddress": [0],\n        "transactionHash": "0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3",\n        "transactionPosition": 2,\n        "type": "call"\n    }\n}\n')),(0,l.kt)("h3",{id:"trace_transaction"},(0,l.kt)("inlineCode",{parentName:"h3"},"trace_transaction")),(0,l.kt)("p",null,"Returns all traces of the given transaction"),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Hash")," - Transaction hash")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"params": ["0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3"]\n')),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Array")," - Traces of given transaction")),(0,l.kt)("h4",{id:"request-8"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\'{"method":"trace_transaction","params":["0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3"],"id":1,"jsonrpc":"2.0"}\'\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "action": {\n        "callType": "call",\n        "from": "0x1c39ba39e4735cb65978d4db400ddd70a72dc750",\n        "gas": "0x13e99",\n        "input": "0x16c72721",\n        "to": "0x2bd2326c993dfaef84f696526064ff22eba5b362",\n        "value": "0x0"\n      },\n      "blockHash": "0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add",\n      "blockNumber": 3068185,\n      "result": {\n        "gasUsed": "0x183",\n        "output": "0x0000000000000000000000000000000000000000000000000000000000000001"\n      },\n      "subtraces": 0,\n      "traceAddress": [\n        0\n      ],\n      "transactionHash": "0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3",\n      "transactionPosition": 2,\n      "type": "call"\n    },\n    ...\n  ]\n}\n')),(0,l.kt)("h2",{id:"relay-switchboard"},"Relay Switchboard"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"TODO")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eth_setRelayPeer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eth_getRelayPeer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eth_getRelayStats"))),(0,l.kt)("h2",{id:"global-virtual-mempool"},"Global Virtual Mempool"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manifold_txpool_health")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manifold_txpool_map")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manifold_txpool_search"))),(0,l.kt)("p",null,"methods ",(0,l.kt)("inlineCode",{parentName:"p"},"manifold_txpool_*")," are available only for users with access to SecureRPC"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"curl -X POST -H 'Content-type: application/json' -d")),(0,l.kt)("h3",{id:"manifold_txpool_health"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_txpool_health")),(0,l.kt)("p",null,"Returns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Request")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'\'{"jsonrpc": "2.0", "method": "txpool_health", "id": 1}\'\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{ "jsonrpc": "2.0", "id": 1, "result": { "pending": "0x1400", "queued": "0x400" } }\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -H \'Content-type: application/json\' -d \'{"jsonrpc": "2.0", "method": "manifold_txpool_health", "id": 1}\' https://q.securerpc.com/v1/eth/YOUR-APP-ID\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{ "jsonrpc": "2.0", "id": 1, "result": { "pending": "0xdc2e", "queued": "0xbbbe", "total": "0x197ec" } }\n')),(0,l.kt)("h3",{id:"manifold_txpool_map"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_txpool_map")),(0,l.kt)("p",null,"Returns a list with the exact details of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only."),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"No (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"start index (default is == 0)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"No (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"number of items to return (maxResults = 10_000)")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -H \'Content-type: application/json\' -d \'{"jsonrpc": "2.0", "method": "manifold_txpool_map", "params":[0, 10], "id": 1}\' https://q.securerpc.com/v1/eth/YOUR-APP-ID\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "pending": {\n            "0x5f7a3238efb2d450be97afcf5b1dd34451024d860fe65a9eea1fe116508ec124": {\n                "302213": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x077d360f11d220e4d5d831430c81c26c9be7c4a4",\n                    "gas": "0x15f90",\n                    "gasPrice": "0x9d21fb900",\n                    "hash": "0x5f7a3238efb2d450be97afcf5b1dd34451024d860fe65a9eea1fe116508ec124",\n                    "input": "0x",\n                    "nonce": "0x49c85",\n                    "to": "0xe0f70bc1c864b7ace8a80d454565ee5b6f68dfd4",\n                    "transactionIndex": null,\n                    "value": "0x388b7b360f3000",\n                    "type": "0x0",\n                    "v": "0x26",\n                    "r": "0x25e22877938610b58ed2f941399b551d9749030c2112f4845fe382ea504fa4bd",\n                    "s": "0x129832f580977771e1184b39d55a699700855562badb656a6c12d59d01efbd48"\n                }\n            },\n            "0xe2e22009fc6ca711311b354f75c15de2a96cd8f8aea7f8baf91911881b5d78e1": {\n                "315739": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x48c04ed5691981c42154c6167398f95e8f38a7ff",\n                    "gas": "0x2bf20",\n                    "gasPrice": "0x9d21fb900",\n                    "hash": "0xe2e22009fc6ca711311b354f75c15de2a96cd8f8aea7f8baf91911881b5d78e1",\n                    "input": "0xa9059cbb000000000000000000000000f8f0036fd0c89113ad06fec122ce8fc50c4bd8b500000000000000000000000000000000000000000000000000000000c20c945d",\n                    "nonce": "0x4d15b",\n                    "to": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",\n                    "transactionIndex": null,\n                    "value": "0x0",\n                    "type": "0x0",\n                    "v": "0x25",\n                    "r": "0x4c803af95903e07f34bc52db272015c5e3a3340f8ff8c436c970617e1179661f",\n                    "s": "0x2693cd957456b3481aefc968f1730ffdfb3bd81e6dc4115fc2771ccfa82d1b9a"\n                }\n            },\n            "0xe5f74e7e3d8bbc47341e2c30d38166d7f7fa76807597acc9d2f5d0ede6f775b5": {\n                "9": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x5060734d755a235b8fb6a2769824ee07ce1e0e1d",\n                    "gas": "0x5208",\n                    "gasPrice": "0x2cefb24a00",\n                    "maxFeePerGas": "0x2cefb24a00",\n                    "maxPriorityFeePerGas": "0x77359400",\n                    "hash": "0xe5f74e7e3d8bbc47341e2c30d38166d7f7fa76807597acc9d2f5d0ede6f775b5",\n                    "input": "0x",\n                    "nonce": "0x9",\n                    "to": "0x9ccf394fdbeec9926cb1ae877cc28c606fbd2cab",\n                    "transactionIndex": null,\n                    "value": "0x68ce6f220edaa",\n                    "type": "0x2",\n                    "accessList": [],\n                    "chainId": "0x1",\n                    "v": "0x0",\n                    "r": "0xc3f2cb393319e6506f0fb2ebc46c19d6ad2838577dcf8f049f00b8e117423c35",\n                    "s": "0x777c0ec1daf7ba7f030356a60ea3be11217fb319c77a5367e00a0423ae535636"\n                }\n            },\n            "0x313cec5a71bfdbb3e50550f6289c1a0ab9b8150ada201f8eebebf6f1936fdac5": {\n                "10": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x5060734d755a235b8fb6a2769824ee07ce1e0e1d",\n                    "gas": "0x5208",\n                    "gasPrice": "0x400746fe00",\n                    "maxFeePerGas": "0x400746fe00",\n                    "maxPriorityFeePerGas": "0x77359400",\n                    "hash": "0x313cec5a71bfdbb3e50550f6289c1a0ab9b8150ada201f8eebebf6f1936fdac5",\n                    "input": "0x",\n                    "nonce": "0xa",\n                    "to": "0x5060734d755a235b8fb6a2769824ee07ce1e0e1d",\n                    "transactionIndex": null,\n                    "value": "0x346fe398e12",\n                    "type": "0x2",\n                    "accessList": [],\n                    "chainId": "0x1",\n                    "v": "0x1",\n                    "r": "0x79f0f6dcd1cd931c8cd5ceaf86e412a0a60226cda3f82a064af71b86493601ee",\n                    "s": "0x291185c574299706653983845210e33629d428e5e4b92a5f0fcc6868a3427d7b"\n                }\n            },\n            "0xfe972fd2b99babab1d0b038456c7d97a62714cbbf6983ad180cc2113b7d11ae8": {\n                "11": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x5060734d755a235b8fb6a2769824ee07ce1e0e1d",\n                    "gas": "0x5208",\n                    "gasPrice": "0x13532f7e00",\n                    "maxFeePerGas": "0x13532f7e00",\n                    "maxPriorityFeePerGas": "0x77359400",\n                    "hash": "0xfe972fd2b99babab1d0b038456c7d97a62714cbbf6983ad180cc2113b7d11ae8",\n                    "input": "0x",\n                    "nonce": "0xb",\n                    "to": "0x5060734d755a235b8fb6a2769824ee07ce1e0e1d",\n                    "transactionIndex": null,\n                    "value": "0x34796070b78",\n                    "type": "0x2",\n                    "accessList": [],\n                    "chainId": "0x1",\n                    "v": "0x1",\n                    "r": "0x6f40aaf13320a8a05d9e2c123524f9204a09614c166e5979522cbfddc38528fe",\n                    "s": "0x393a10aeab49e2751f2db15e4f94a973730f1728a2b2b1db92b614f7e7cb4dae"\n                }\n            }\n        }\n    }\n}\n')),(0,l.kt)("h3",{id:"manifold_txpool_search"},(0,l.kt)("inlineCode",{parentName:"h3"},"manifold_txpool_search")),(0,l.kt)("p",null,"Returns a list with the exact details of all the pending/queued transactions in the global public mempool. Takes parameters for input on search criteria."),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("p",null,"1: ",(0,l.kt)("inlineCode",{parentName:"p"},"from ")," - (optional) exact match in the transaction 'from' property 2: ",(0,l.kt)("inlineCode",{parentName:"p"},"to")," - (optional) exact match in the transaction 'to' property 3: ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," - (optional) exact match in the transaction 'value' property 4: ",(0,l.kt)("inlineCode",{parentName:"p"},"input")," - (optional) wildcard match of the transaction 'input' data"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Example:")),(0,l.kt)("p",null,"Sample usage how to get all pending/queued transactions to Uniswap V2 Router (0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D) with method call:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\n")),(0,l.kt)("p",null,"This sample usage is often used during the ",(0,l.kt)("inlineCode",{parentName:"p"},"gasPrice")," analyze of the arbitrages on Uniswap."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -H \'Content-type: application/json\' -d \'{"jsonrpc": "2.0", "method": "manifold_txpool_search", "params":[{"to": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D", "input": "0x38ed1739*"}], "id": 1}\' https://q.securerpc.com/v1/eth/YOUR-APP-ID\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "pending": {\n            "0x87b23e2124e50bc1e6539b61043f39e0071afd6f11311b19b29b865d6c138882": {\n                "70223": {\n                    "blockHash": null,\n                    "blockNumber": null,\n                    "from": "0x98041ab523024dacaefa3bb70dd982dbac68e855",\n                    "gas": "0x61a80",\n                    "gasPrice": "0x14e7458a40",\n                    "maxFeePerGas": "0x14e7458a40",\n                    "maxPriorityFeePerGas": "0x14e7458a40",\n                    "hash": "0x87b23e2124e50bc1e6539b61043f39e0071afd6f11311b19b29b865d6c138882",\n                    "input": "0x38ed17390000000000000000000000000000000000000000000006999e1c5668566c39b6000000000000000000000000000000000000000000000035a83bffd099a3ffff00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000098041ab523024dacaefa3bb70dd982dbac68e85500000000000000000000000000000000000000000000000000000000624f1c5f0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000853d955acef822db058eb8505911ed77f175b99e0000000000000000000000003432b6a60d23ca0dfca7761b7ab56459d9c964d0",\n                    "nonce": "0x1124f",\n                    "to": "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",\n                    "transactionIndex": null,\n                    "value": "0x0",\n                    "type": "0x2",\n                    "accessList": [],\n                    "chainId": "0x1",\n                    "v": "0x1",\n                    "r": "0xf0eb5d621aeab0a952fcb233e271f9ca0f71e1acd39c91dcb4295fa966ea870e",\n                    "s": "0x6f238592d31ec1b36f9314a0eb6f190c6e833cfcebcbf66ebd95c8451630a3d3"\n                }\n            }\n        },\n        "queued": {}\n    }\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Max results for ",(0,l.kt)("inlineCode",{parentName:"p"},"manifold_txpool_search")," are limited to 10_000 results")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ErrorCodes {\n    readonly rpc: {\n        readonly invalidInput: -32000;\n        readonly resourceNotFound: -32001;\n        readonly resourceUnavailable: -32002;\n        readonly transactionRejected: -32003;\n        readonly methodNotSupported: -32004;\n        readonly limitExceeded: -32005;\n        readonly parse: -32700;\n        readonly invalidRequest: -32600;\n        readonly methodNotFound: -32601;\n        readonly invalidParams: -32602;\n        readonly internal: -32603;\n    };\n    readonly provider: {\n        readonly userRejectedRequest: 4001;\n        readonly unauthorized: 4100;\n        readonly unsupportedMethod: 4200;\n        readonly disconnected: 4900;\n        readonly chainDisconnected: 4901;\n    };\n}\n\nexport const errorCodes: ErrorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "4001": {\n        "standard": "EIP-1193",\n        "message": "User rejected the request."\n    },\n    "4100": {\n        "standard": "EIP-1193",\n        "message": "The requested account and/or method has not been authorized by the user."\n    },\n    "4200": {\n        "standard": "EIP-1193",\n        "message": "The requested method is not supported by this Ethereum provider."\n    },\n    "4900": {\n        "standard": "EIP-1193",\n        "message": "The provider is disconnected from all chains."\n    },\n    "4901": {\n        "standard": "EIP-1193",\n        "message": "The provider is disconnected from the specified chain."\n    },\n    "-32700": {\n        "standard": "JSON RPC 2.0",\n        "message": "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."\n    },\n    "-32600": {\n        "standard": "JSON RPC 2.0",\n        "message": "The JSON sent is not a valid Request object."\n    },\n    "-32601": {\n        "standard": "JSON RPC 2.0",\n        "message": "The method does not exist / is not available."\n    },\n    "-32602": {\n        "standard": "JSON RPC 2.0",\n        "message": "Invalid method parameter(s)."\n    },\n    "-32603": {\n        "standard": "JSON RPC 2.0",\n        "message": "Internal JSON-RPC error."\n    },\n    "-32000": {\n        "standard": "EIP-1474",\n        "message": "Invalid input."\n    },\n    "-32001": {\n        "standard": "EIP-1474",\n        "message": "Resource not found."\n    },\n    "-32002": {\n        "standard": "EIP-1474",\n        "message": "Resource unavailable."\n    },\n    "-32003": {\n        "standard": "EIP-1474",\n        "message": "Transaction rejected."\n    },\n    "-32004": {\n        "standard": "EIP-1474",\n        "message": "Method not supported."\n    },\n    "-32005": {\n        "standard": "EIP-1474",\n        "message": "Request limit exceeded."\n    }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/nCeNAQLrTDKs42oLSFgUOg"},"^"),"2.2. Which History?, Ethereum Yellowpaper"))}m.isMDXComponent=!0}}]);