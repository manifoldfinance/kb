"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[5660],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},664:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:2,id:"contributing",title:"Contributing to the Knowledge Base",description:"Preface and Introduction contributing to the Knowledge Base"},u="Ground Truth",s={unversionedId:"Community/contributing",id:"Community/contributing",title:"Contributing to the Knowledge Base",description:"Preface and Introduction contributing to the Knowledge Base",source:"@site/docs/Community/intro.md",sourceDirName:"Community",slug:"/Community/contributing",permalink:"/docs/Community/contributing",draft:!1,editUrl:"https://github.com/manifoldfinance/kb/tree/trunk/docs/Community/intro.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"contributing",title:"Contributing to the Knowledge Base",description:"Preface and Introduction contributing to the Knowledge Base"},sidebar:"docsSidebar",previous:{title:"Contributing and Community Dogma",permalink:"/docs/Community/intro"},next:{title:"Contracts - Router",permalink:"/docs/category/contracts---router"}},c={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Generate a new page",id:"generate-a-new-page",level:2},{value:"Start the development server",id:"start-the-development-server",level:2},{value:"Line highlighting",id:"line-highlighting",level:2},{value:"Line numbering",id:"line-numbering",level:3},{value:"Dappspec - Natspec support",id:"dappspec---natspec-support",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ground-truth"},"Ground Truth"),(0,i.kt)("p",null,"Stop thinking of documentation as a chore you do for others, and instead think of it as a way to explore your problem space. and the space in your head around your intuitions about the problem, so you can shine light into the murkier corners of both. Writing documentation can function as valuable knowledge capture about your problem domain even when you are the only expert about what you are trying to do."),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Get started by ",(0,i.kt)("strong",{parentName:"p"},"creating a new site"),"."),(0,i.kt)("p",null,"Or ",(0,i.kt)("strong",{parentName:"p"},"try Docusaurus immediately")," with ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://docusaurus.new"},"docusaurus.new")),"."),(0,i.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version 14 or above:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When installing Node.js, you are recommended to check all checkboxes related to dependencies.")))),(0,i.kt)("h2",{id:"generate-a-new-page"},"Generate a new page"),(0,i.kt)("p",null,"Front matter quires the following"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"id: intro\n")),(0,i.kt)("h2",{id:"start-the-development-server"},"Start the development server"),(0,i.kt)("p",null,"Run the development server:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-website\nnpm run start\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"cd")," command changes the directory you're working with. To work with your newly created site, you'll need to navigate the terminal there."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run start")," command builds your website locally and serves it through a development server, ready for you to view at http://localhost:3000/."),(0,i.kt)("p",null,"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/intro.md")," (this page) and edit some lines: the site ",(0,i.kt)("strong",{parentName:"p"},"reloads automatically")," and displays your changes."),(0,i.kt)("h2",{id:"line-highlighting"},"Line highlighting"),(0,i.kt)("p",null,"Highlighting with comments You can use comments with highlight-next-line, highlight-start, and highlight-end to select which lines are highlighted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function HighlightSomeText(highlight) {\n    if (highlight) {\n        // highlight-next-line\n        return "This text is highlighted!";\n    }\n\n    return "Nothing highlighted";\n}\n\nfunction HighlightMoreText(highlight) {\n    // highlight-start\n    if (highlight) {\n        return "This range is highlighted!";\n    }\n    // highlight-end\n\n    return "Nothing highlighted";\n}\n')),(0,i.kt)("h3",{id:"line-numbering"},"Line numbering"),(0,i.kt)("p",null,"You can enable line numbering for your code block by using showLineNumbers key within the language meta string (don't forget to add space directly before the key)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"{1,4-6,11} showLineNumbers","{1,4-6,11}":!0,showLineNumbers:!0},'import React from "react";\n\nfunction MyComponent(props) {\n    if (props.isBar) {\n        return <div>Bar</div>;\n    }\n\n    return <div>Foo</div>;\n}\n\nexport default MyComponent;\n')),(0,i.kt)("h2",{id:"dappspec---natspec-support"},"Dappspec - Natspec support"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'pragma solidity ^0.6.12 || ^0.7.0;\npragma experimental ABIEncoderV2;\n/// @title Call Tester\ncontract CallTester  {\n    // Call Destination\n    struct CallDesc {\n        address to;\n        bytes data;\n        uint256 value;\n    }\n    // !Dappspec\n    // make call to dest.\n    function makeCalls(CallDesc[] memory calls) external payable returns (bytes memory ret) {\n        for (uint i = 0; i < calls.length; i++) {\n            CallDesc memory c = calls[i];\n            (bool ok, bytes memory data) = c.to.call{value: c.value}(c.data);\n            require(ok, "ERR");\n            ret = data;\n        }\n    }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity",metastring:"{1,4-6,11} showLineNumbers","{1,4-6,11}":!0,showLineNumbers:!0},'pragma solidity ^0.6.12 || ^0.7.0;\npragma experimental ABIEncoderV2;\n/// @title Call Tester\ncontract CallTester  {\n    // Call Destination\n    struct CallDesc {\n        address to;\n        bytes data;\n        uint256 value;\n    }\n    // !Dappspec\n    // make call to dest.\n    function makeCalls(CallDesc[] memory calls) external payable returns (bytes memory ret) {\n        for (uint i = 0; i < calls.length; i++) {\n            CallDesc memory c = calls[i];\n            (bool ok, bytes memory data) = c.to.call{value: c.value}(c.data);\n            require(ok, "ERR");\n            ret = data;\n        }\n    }\n}\n')))}m.isMDXComponent=!0}}]);