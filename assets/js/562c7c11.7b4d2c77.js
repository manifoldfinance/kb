"use strict";(self.webpackChunkmanifold_kb=self.webpackChunkmanifold_kb||[]).push([[3303],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),d=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,E=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(E,l(l({ref:t},c),{},{components:n})):r.createElement(E,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9400:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],s={id:"ref-error-codes-rpc",title:"Error encoding and responses",weight:7},i="Error encoding and responses for JSON-RPC",d={unversionedId:"Rpc/ref-error-codes-rpc",id:"Rpc/ref-error-codes-rpc",title:"Error encoding and responses",description:"Error encoding respones may not match the underlying issue, take care in assuming 1:1 relationships",source:"@site/docs/Rpc/error-encoding.md",sourceDirName:"Rpc",slug:"/Rpc/ref-error-codes-rpc",permalink:"/docs/Rpc/ref-error-codes-rpc",draft:!1,editUrl:"https://github.com/manifoldfinance/kb/tree/trunk/docs/Rpc/error-encoding.md",tags:[],version:"current",frontMatter:{id:"ref-error-codes-rpc",title:"Error encoding and responses",weight:7},sidebar:"docsSidebar",previous:{title:"DApp Error Support",permalink:"/docs/Rpc/rpc-dapp-support"},next:{title:"MEV RPC methods",permalink:"/docs/Rpc/ref-mev-rpc"}},c={},p=[{value:"Provider and RPC",id:"provider-and-rpc",level:2},{value:"Flashbots RPC Methods Parameters",id:"flashbots-rpc-methods-parameters",level:2},{value:"Default Parameters",id:"default-parameters",level:3},{value:"Reference: WalletConnect Typescript Error Encoding",id:"reference-walletconnect-typescript-error-encoding",level:3},{value:"Reference: Anvil Error Codes",id:"reference-anvil-error-codes",level:3},{value:"EIP-234",id:"eip-234",level:2},{value:"EVM execution status codes",id:"evm-execution-status-codes",level:2}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"error-encoding-and-responses-for-json-rpc"},"Error encoding and responses for JSON-RPC"),(0,o.kt)("p",null,":::warning"),(0,o.kt)("p",null,"Error encoding respones may not match the underlying issue, take care in assuming 1:1 relationships"),(0,o.kt)("p",null,":::"),(0,o.kt)("h2",{id:"provider-and-rpc"},"Provider and RPC"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// ErrorCodes from OpenMevSdk\nexport const errorCodes: ErrorCodes = {\n    rpc: {\n        invalidInput: -32_000,\n        resourceNotFound: -32_001,\n        resourceUnavailable: -32_002,\n        transactionRejected: -32_003,\n        methodNotSupported: -32_004,\n        limitExceeded: -32_005,\n        parse: -32_700,\n        invalidRequest: -32_600,\n        methodNotFound: -32_601,\n        invalidParams:\n            -32_602 /* Invalid transaction envelope type: specified type \\"0x02\\" but including maxFeePerGas and maxPriorityFeePerGas requires type: \\"0x2\\"", data: None })) */,\n        internal:\n            -32_603 /* Cannot read properties of undefined (reading \'message\', data: Some(Object({"originalError": Object({}) })) */,\n    },\n    provider: {\n        userRejectedRequest: 4_001,\n        unauthorized: 4_100 /* UNAUTHORIZED */,\n        unsupportedMethod: 4_200 /* UNSUPPORTEDMETHOD */,\n        disconnected: 4_900,\n        chainDisconnected: 4_901,\n    },\n};\n')),(0,o.kt)("h2",{id:"flashbots-rpc-methods-parameters"},"Flashbots RPC Methods Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Parameters")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Description")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"txs"),(0,o.kt)("td",{parentName:"tr",align:null},"Array","[String]",", A list of signed transactions to execute in an atomic bundle")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"blockNumber"),(0,o.kt)("td",{parentName:"tr",align:null},"String, a hex encoded block number for which this bundle is valid on")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"minTimestamp(Optional)"),(0,o.kt)("td",{parentName:"tr",align:null},"Number, the minimum timestamp for which this bundle is valid, in seconds since the unix epoch")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"maxTimestamp(Optional)"),(0,o.kt)("td",{parentName:"tr",align:null},"Number, the minimum timestamp for which this bundle is valid, in seconds since the unix epoch")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"revertingTxHashes(Optional)"),(0,o.kt)("td",{parentName:"tr",align:null},"Array","[String]",", list of tx hashes within the bundle that are allowed to revert")))),(0,o.kt)("h3",{id:"default-parameters"},"Default Parameters"),(0,o.kt)("p",null,"The default block parameter The following methods have an extra default block parameter:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"eth_getBalance"),(0,o.kt)("li",{parentName:"ul"},"eth_getCode"),(0,o.kt)("li",{parentName:"ul"},"eth_getTransactionCount"),(0,o.kt)("li",{parentName:"ul"},"eth_getStorageAt"),(0,o.kt)("li",{parentName:"ul"},"eth_call")),(0,o.kt)("p",null,"When requests are made that act on the state of Ethereum, the last default block parameter determines the height of the block."),(0,o.kt)("p",null,"The following options are possible for the defaultBlock parameter:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Encoding")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"param")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"description")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"HEX"),(0,o.kt)("td",{parentName:"tr",align:null},"String"),(0,o.kt)("td",{parentName:"tr",align:null},"an integer block number")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"String"),(0,o.kt)("td",{parentName:"tr",align:null},'"earliest"'),(0,o.kt)("td",{parentName:"tr",align:null},"for the earliest/genesis block")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"String"),(0,o.kt)("td",{parentName:"tr",align:null},'"latest"'),(0,o.kt)("td",{parentName:"tr",align:null},"for the latest mined block")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"String"),(0,o.kt)("td",{parentName:"tr",align:null},'"pending"'),(0,o.kt)("td",{parentName:"tr",align:null},"for the pending state/transactions")))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Type")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Code")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Description")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"0")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PARSE_ERROR:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32700,"),(0,o.kt)("td",{parentName:"tr",align:null},"Parse error"),(0,o.kt)("td",{parentName:"tr",align:null},"1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"INVALID_REQUEST:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32600,"),(0,o.kt)("td",{parentName:"tr",align:null},"Invalid Request"),(0,o.kt)("td",{parentName:"tr",align:null},"2")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"METHOD_NOT_FOUND:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32601,"),(0,o.kt)("td",{parentName:"tr",align:null},"Method not found"),(0,o.kt)("td",{parentName:"tr",align:null},"3")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"INVALID_PARAMS:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32602,"),(0,o.kt)("td",{parentName:"tr",align:null},"Invalid params"),(0,o.kt)("td",{parentName:"tr",align:null},"4")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"INTERNAL_ERROR:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32603,"),(0,o.kt)("td",{parentName:"tr",align:null},"Internal error"),(0,o.kt)("td",{parentName:"tr",align:null},"5")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SERVER_ERROR:"),(0,o.kt)("td",{parentName:"tr",align:null},"-32000,"),(0,o.kt)("td",{parentName:"tr",align:null},"Server error"),(0,o.kt)("td",{parentName:"tr",align:null},"6")))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"reference-walletconnect-typescript-error-encoding"},"Reference: WalletConnect Typescript Error Encoding"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// source: https://github.com/WalletConnect/walletconnect-utils/blob/master/jsonrpc/utils/src/constants.ts#L1-#L20\nexport const PARSE_ERROR = "PARSE_ERROR";\nexport const INVALID_REQUEST = "INVALID_REQUEST";\nexport const METHOD_NOT_FOUND = "METHOD_NOT_FOUND";\nexport const INVALID_PARAMS = "INVALID_PARAMS";\nexport const INTERNAL_ERROR = "INTERNAL_ERROR";\nexport const SERVER_ERROR = "SERVER_ERROR";\n\nexport const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexport const SERVER_ERROR_CODE_RANGE = [-32000, -32099];\n\nexport const STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: { code: -32700, message: "Parse error" },\n    [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },\n    [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },\n    [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },\n    [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },\n    [SERVER_ERROR]: { code: -32000, message: "Server error" },\n};\n\nexport const DEFAULT_ERROR = SERVER_ERROR;\n')),(0,o.kt)("h3",{id:"reference-anvil-error-codes"},"Reference: Anvil Error Codes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// https://github.com/foundry-rs/foundry/blob/master/anvil/rpc/src/error.rs#L103-#L124\nimpl ErrorCode {\n    /// Returns the error code as `i64`\n    pub fn code(&self) -> i64 {\n        match *self {\n            ErrorCode::ParseError => -32700,\n            ErrorCode::InvalidRequest => -32600,\n            ErrorCode::MethodNotFound => -32601,\n            ErrorCode::InvalidParams => -32602,\n            ErrorCode::InternalError => -32603,\n            ErrorCode::TransactionRejected => -32003,\n            ErrorCode::ExecutionError => 3,\n            ErrorCode::ServerError(c) => c,\n        }\n    }\n\n    /// Returns the message associated with the error\n    pub const fn message(&self) -> &\'static str {\n        match *self {\n            ErrorCode::ParseError => "Parse error",\n            ErrorCode::InvalidRequest => "Invalid request",\n            ErrorCode::MethodNotFound => "Method not found",\n            ErrorCode::InvalidParams => "Invalid params",\n            ErrorCode::InternalError => "Internal error",\n            ErrorCode::TransactionRejected => "Transaction rejected",\n            ErrorCode::ServerError(_) => "Server error",\n            ErrorCode::ExecutionError => "Execution error",\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"eip-234"},"EIP-234"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'/**\n *\n * @export\n * errorValues\n * @summary EIP-234 Error Values\n * @see {@link https://github.com/ethereum/EIPs/blob/master/EIPS/eip-234.md}\n */\n\nexport const errorValues = {\n    "-32700": {\n        PARSE_ERROR: {\n            standard: "JSON RPC 2.0",\n            message:\n                "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",\n        },\n    },\n    "-32600": {\n        INVALID_REQUEST: {\n            standard: "JSON RPC 2.0",\n            message: "The JSON sent is not a valid Request object.",\n        },\n    },\n    "-32601": {\n        METHOD_NOT_FOUND: {\n            standard: "JSON RPC 2.0",\n            message: "The method does not exist / is not available.",\n        },\n    },\n    "-32602": {\n        INVALID_PARAMS: {\n            standard: "JSON RPC 2.0",\n            message: "Invalid method parameter(s).",\n            /* Example */\n            /* Invalid transaction envelope type: specified type \\"0x02\\" but including maxFeePerGas and maxPriorityFeePerGas requires type: \\"0x2\\"", data: None })) */\n        },\n    },\n    "-32603": {\n        INTERNAL_ERROR: {\n            standard: "JSON RPC 2.0",\n            message: "Internal JSON-RPC error.",\n        },\n        /* Example */\n        /* /* Cannot read properties of undefined (reading \'message\', data: Some(Object({"originalError": Object({}) })) */\n    },\n    // eth_getStorageAt [ "0x<address>", { "blockHash": "0x<non-canonical-block-hash>", "requireCanonical": true } -> raise block-not-canonical error\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md#:~:text=If%20the%20block%20is%20not%20found,found%20rather%20than%20block%2Dnot%2Dcanonical.\n    "-32000": {\n        SERVER_ERROR: {\n            standard: "EIP-1474, EIP-1898",\n            message: "Server error: Invalid input, unable to locate canonical block",\n        },\n    },\n    // eth_getStorageAt [ "0x<address>", { "blockHash": "0x<non-existent-block-hash>" } -> raise block-not-found error\n    // eth_getStorageAt [ "0x<address>", { "blockHash": "0x<non-existent-block-hash>", "requireCanonical": false } -> raise block-not-found error\n    // eth_getStorageAt [ "0x<address>", { "blockHash": "0x<non-existent-block-hash>", "requireCanonical": true } -> raise block-not-found error\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md#:~:text=If%20the%20block%20is%20not%20found,found%20rather%20than%20block%2Dnot%2Dcanonical.\n    "-32001": {\n        standard: "EIP-1474, EIP-1898",\n        message: "Server error: Requested resource, block,  not found.",\n    },\n    "-32002": {\n        standard: "EIP-1474",\n        message: "Resource unavailable.",\n    },\n    "-32003": {\n        standard: "EIP-1474",\n        message: "Transaction rejected.",\n    },\n    "-32004": {\n        standard: "EIP-1474",\n        message: "Method not supported.",\n    },\n    "-32005": {\n        standard: "EIP-1474",\n        message: "Request limit exceeded.",\n    },\n    "4001": {\n        standard: "EIP-1193",\n        message: "User rejected the request.",\n    },\n    "4100": {\n        UNAUTHORIZED: {\n            standard: "EIP-1193",\n            message: "The requested account and/or method has not been authorized by the user.",\n        },\n    },\n    "4200": {\n        UNSUPPORTED_METHOD: {\n            standard: "EIP-1193",\n            message: "The requested method is not supported by this Ethereum provider.",\n        },\n    },\n    "4900": {\n        DISCONNECTED: {\n            standard: "EIP-1193",\n            message: "The provider is disconnected from all chains.",\n        },\n    },\n    "4901": {\n        CHAIN_DISCONNECTED: {\n            standard: "EIP-1193",\n            message: "The provider is disconnected from the specified chain.",\n        },\n    },\n};\n')),(0,o.kt)("h2",{id:"evm-execution-status-codes"},"EVM execution status codes"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"These codes require custom provider support")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"/**\n * EVM execution status codes\n */\nenum class EVMExecutionStatusCode(val number: Int) {\n  SUCCESS(0),\n  FAILURE(1),\n  REVERT(2),\n  OUT_OF_GAS(3),\n  INVALID_INSTRUCTION(4),\n  UNDEFINED_INSTRUCTION(5),\n  STACK_OVERFLOW(6),\n  STACK_UNDERFLOW(7),\n  BAD_JUMP_DESTINATION(8),\n  INVALID_MEMORY_ACCESS(9),\n  CALL_DEPTH_EXCEEDED(10),\n  STATIC_MODE_VIOLATION(11),\n  PRECOMPILE_FAILURE(12),\n  CONTRACT_VALIDATION_FAILURE(13),\n  ARGUMENT_OUT_OF_RANGE(14),\n  WASM_UNREACHABLE_INSTRUCTION(15),\n  WASM_TRAP(16),\n  INTERNAL_ERROR(-1),\n  REJECTED(-2),\n  OUT_OF_MEMORY(-3),\n  HALTED(-4);\n}\n")))}m.isMDXComponent=!0}}]);